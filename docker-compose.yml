version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: 2nd_postgres
    environment:
      POSTGRES_DB: second_hand_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - 2nd_network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: 2nd_backend
    environment:
      NODE_ENV: development
      PORT: 5001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: second_hand_db
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      JWT_EXPIRES_IN: 7d
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      - postgres
    networks:
      - 2nd_network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: 2nd_frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:5001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - 2nd_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  2nd_network:
    driver: bridge 